var questionEl = document.getElementById('question-block');
var answerEl = document.getElementById('answers-buttons');

var startButton = document.getElementById('startBtn');
var timerEl = document.getElementById('timer-count');
var nextBtn = document.getElementById('next-btn');

// Variables to call out the highscore havent got to this yet
var highscoreEl = document.getElementById('highscore-check');
var feedbackEl = document.getElementById('feedback-block');

var currentQuestionIndex = 0;
var score = 0;
var timer;
var timerCount;

// Lists of the questions as a object 
const quizQuestion = [
    { 
        question: "What is the most general base class from which all element objects in a Document inherit?",
        answers: [
            {btnText: '.children'},
            {btnText: 'class'},
            {btnText: 'Element'},
            {btnText: 'HTML'},
        ],
        correctAnswer: 'Element'
    },
    {
        question: "here is question 2?",
        answers: [
            {btnText: 'Test 1'},
            {btnText: 'Test 2'},
            {btnText: 'Test 3'},
            {btnText: 'Test 4'},
        ],
        correctAnswer: 'Test 1'
    },
    {
        question: "here is question 3?",
        answers: [
            {btnText: 'Test 1'},
            {btnText: 'Test 2'},
            {btnText: 'Test 3'},
            {btnText: 'Test 4'},
        ],
        correctAnswer: 'Test 4'
    },
    {
        question: "here is question 4?",
        answers: [
            {btnText: 'Test 1'},
            {btnText: 'Test 2'},
            {btnText: 'Test 3'},
            {btnText: 'Test 4'},
        ],
        correctAnswer: 'Test 3'
    },
    
];
// Adding constant variable here to be used throughout the scrpt 
// const currentQuestion = quizQuestion[currentQuestionIndex];

// Event listner to ensure the correct function is working 
startButton.addEventListener('click', function(){
    startButton.disable = false;
    startQuiz();
    //startTimer();
}
);

// Function for starting the Quiz after clicking the start button 
function startQuiz(){
    //currentQuestionIndex = 0;
    timerCount = 50;
    showQuestion();
    //startTimer();
};

// Function that handles the timer for the set of quiz questions beginning with the start button (the timer starts from a high # and descends and when the set of questions are finished then the number it lands will be the score)
function startTimer(){
    timer = setInterval(function(){
        timerCount--;
        timerEl.textContent = timerCount;
        if(timerCount > 0){
            // IF the rendered questioned are rendered and completed then I would like the timer to stop and run another funstion to store the timer on local storage  ""setTimeScore()""    
            console.log('timer is above 0');
        }
        if (timerCount === 0) {
            clearInterval(timer);
            timerEl.textContent = 0;
            console.log('Thanks for taking the quiz');   
        }
    },1000);
};

// Function for filling up the questions in the question-block not criteria on amount of question (start with 1) 
function showQuestion(){   
    resetState();
    // This portion of the is rendering the number of the question and rendering the question text
    var questionNo = currentQuestionIndex +1;
    var currentQuestion = quizQuestion[currentQuestionIndex];
    questionEl.innerHTML = questionNo + '. ' + currentQuestion.question;
    
    // For each question (ref quizQuestion) this is rendering the answers from the array of objects (e.g. questions) and creating them as a button laid out
    currentQuestion.answers.forEach(answer => {
        const button = document.createElement('button');
        button.innerHTML = answer.btnText;
        button.classList.add('btn');
        answerEl.appendChild(button);
        
        // This is eventListner to the new generated buttons from the questions answers --> ( This is going to verify if answer is correct ) 
        button.addEventListener('click', checkAnswer);
    });
};
// resetState is used to remove the previous answer buttons that are generated by the showQuestion function  
function resetState (){
    answerEl.classList.remove('hide');
    nextBtn.classList.add('hide');
    while(answerEl.firstChild){
        answerEl.removeChild(answerEl.firstChild);
    }
};

function checkAnswer(event){
    var currentQuestion = quizQuestion[currentQuestionIndex];
    var selectedBtn = event.target
    var selectedBtnText = event.target.textContent;
    var questionAnsw = currentQuestion.correctAnswer
    
    if (selectedBtnText === questionAnsw) {
        selectedBtn.classList.add('correct');
        nextBtn.classList.remove('hide');
    } else {
        selectedBtn.classList.add('incorrect');
        // Need to add minus time for the timer here
    }
};

// Function used for the next button for moving the question up the index count
function nextQuestion() {
    if (currentQuestionIndex < quizQuestion.length-1) {
        currentQuestionIndex++;
        showQuestion(currentQuestionIndex);
        checkAnswer(currentQuestionIndex);    
    } 
};

// event listner for the next button for the next button to 
nextBtn.addEventListener('click', nextQuestion);